{"version":3,"file":"closest-silhouette-point-example.svg-139d0076.js","sources":["../../../examples/dist/geometric-queries/closest-silhouette-point/closest-silhouette-point-example.svg.js"],"sourcesContent":["export default \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<!-- Generator: Adobe Illustrator 27.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\n<svg version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n\\t viewBox=\\\"0 0 800 700\\\" style=\\\"enable-background:new 0 0 800 700;\\\" xml:space=\\\"preserve\\\">\\n<style type=\\\"text/css\\\">\\n\\t.st0{fill:#FFFFFF;}\\n\\t.st1{fill:#A63AC4;fill-opacity:0.5;}\\n\\t.st2{stroke:#000000;stroke-width:2;}\\n\\t.st3{fill:none;stroke:#000000;stroke-width:2;stroke-opacity:0.2;stroke-dasharray:10,8;}\\n\\t.st4{fill:#FFFFFF;stroke:#000000;stroke-width:2;}\\n\\t.st5{fill:none;stroke:#8ADD40;stroke-width:5;stroke-opacity:0.5;}\\n\\t.st6{fill:#A87363;fill-opacity:0.5;}\\n\\t.st7{fill:#991CB4;fill-opacity:0.5;}\\n\\t.st8{fill:#4C60A2;fill-opacity:0.5;}\\n\\t.st9{fill:none;stroke:#997098;stroke-width:5;stroke-linejoin:round;}\\n</style>\\n<rect class=\\\"st0\\\" width=\\\"800\\\" height=\\\"700\\\"/>\\n<g>\\n\\t<polygon class=\\\"st1\\\" points=\\\"190,450.3 142,509.4 280.8,700 342.5,612.7 \\t\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st2\\\" d=\\\"M270,10L142,509.4\\\"/>\\n\\t</g>\\n\\t<g>\\n\\t\\t<path class=\\\"st3\\\" d=\\\"M142,509.4l-263.9,1029.7\\\"/>\\n\\t</g>\\n\\t<circle class=\\\"st4\\\" cx=\\\"142\\\" cy=\\\"509.4\\\" r=\\\"5\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st5\\\" d=\\\"M430.9,471.7l-81.9,43.9\\\"/>\\n\\t</g>\\n\\t<ellipse class=\\\"st6\\\" cx=\\\"270\\\" cy=\\\"350\\\" rx=\\\"54.2\\\" ry=\\\"32.5\\\"/>\\n\\t<rect x=\\\"505.3\\\" y=\\\"358\\\" class=\\\"st7\\\" width=\\\"131.6\\\" height=\\\"92.1\\\"/>\\n\\t<circle class=\\\"st8\\\" cx=\\\"206.4\\\" cy=\\\"403\\\" r=\\\"39\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st2\\\" d=\\\"M270,10l-24.7,395.5\\\"/>\\n\\t</g>\\n\\t<g>\\n\\t\\t<path class=\\\"st3\\\" d=\\\"M245.3,405.5l-66.2,1060.9\\\"/>\\n\\t</g>\\n\\t<circle class=\\\"st4\\\" cx=\\\"245.3\\\" cy=\\\"405.5\\\" r=\\\"5\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st2\\\" d=\\\"M270,10l160.9,461.7\\\"/>\\n\\t</g>\\n\\t<g>\\n\\t\\t<path class=\\\"st3\\\" d=\\\"M430.9,471.7l349.8,1003.8\\\"/>\\n\\t</g>\\n\\t<circle class=\\\"st4\\\" cx=\\\"430.9\\\" cy=\\\"471.7\\\" r=\\\"5\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st2\\\" d=\\\"M270,10l54,336.9\\\"/>\\n\\t</g>\\n\\t<g>\\n\\t\\t<path class=\\\"st3\\\" d=\\\"M324,346.9l168.2,1049.6\\\"/>\\n\\t</g>\\n\\t<circle class=\\\"st4\\\" cx=\\\"324\\\" cy=\\\"346.9\\\" r=\\\"5\\\"/>\\n\\t<polyline class=\\\"st9\\\" points=\\\"500.5,355.8 472.5,397.2 426.9,417.7 385,390.3 353.7,429.3 \\t\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st2\\\" d=\\\"M270,10l230.5,345.8\\\"/>\\n\\t</g>\\n\\t<g>\\n\\t\\t<path class=\\\"st3\\\" d=\\\"M500.5,355.8l589.7,884.5\\\"/>\\n\\t</g>\\n\\t<circle class=\\\"st4\\\" cx=\\\"500.5\\\" cy=\\\"355.8\\\" r=\\\"5\\\"/>\\n\\t<g>\\n\\t\\t<path class=\\\"st2\\\" d=\\\"M270,10l235.3,440\\\"/>\\n\\t</g>\\n\\t<g>\\n\\t\\t<path class=\\\"st3\\\" d=\\\"M505.3,450l501.3,937.4\\\"/>\\n\\t</g>\\n\\t<circle class=\\\"st4\\\" cx=\\\"505.3\\\" cy=\\\"450\\\" r=\\\"5\\\"/>\\n\\t<circle cx=\\\"270\\\" cy=\\\"10\\\" r=\\\"5\\\"/>\\n</g>\\n<penrose>\\n\\t<version>0.1</version>\\n\\t<variation>CherokeeDragonfly0873</variation>\\n\\t<sub>-- variation: TopsailBoar92821\\n\\nPoint x1\\nLine L\\nPolyline M\\nPolygon P\\nRectangle R\\nCircle C\\nEllipse E\\n-- Group G</sub>\\n\\t<sty>canvas {\\n   width = 800\\n   height = 700\\n}\\n\\n-- Rules for drawing each type of shape\\n\\nforall Point x {\\n   vec2 x.pos = (0,canvas.height/2 - 10)\\n   shape x.icon = Circle {\\n      center: x.pos\\n      r: 5\\n      strokeWidth: 1\\n      fillColor: #000000ff\\n   } \\n}\\n\\nforall Line L {\\n   shape L.icon = Line {\\n      start: (?,?)\\n      end: (?,?)\\n      strokeWidth: 5\\n   }\\n}\\n\\nforall Rectangle R {\\n   shape R.icon = Rectangle {\\n      center: (?, ?)\\n      width: ?\\n      height: ?\\n      strokeWidth: 1\\n   }\\n\\n   ensure R.icon.width &gt; 50\\n   ensure R.icon.height &gt; 50\\n}\\n\\nforall Polyline M {\\n   vec2 p0 = (?,?)\\n   vec2 p1 = p0 + 50*circleRandom()\\n   vec2 p2 = p1 + 50*rotateBy(unit(p1-p0),random(0,1.5))\\n   vec2 p3 = p2 + 50*rotateBy(unit(p2-p1),random(0,1.5))\\n   vec2 p4 = p3 + 50*rotateBy(unit(p3-p2),random(-1.5,0))\\n   \\n   shape M.icon = Polyline {\\n      points: [ p0, p1, p2, p3, p4 ]\\n      strokeWidth: 5.0\\n      strokeLinejoin: &quot;round&quot;\\n      strokeColor: sampleColor(1.0, &quot;rgb&quot;)\\n   }\\n}\\n\\nforall Polygon P {\\n   vec2 c = (?,?)\\n   scalar d = random(100,200)\\n   scalar u = circleRandom()\\n   scalar v = rot90(u)\\n   vec2 p0 = c + d*u\\n   vec2 p2 = c - d*u\\n   vec2 p1 = c + random(-150,150)*u + random(60,150)*v\\n   vec2 p3 = c + random(-150,150)*u - random(60,150)*v\\n\\n   shape P.icon = Polygon {\\n      points: [ p0, p1, p2, p3 ]\\n   }\\n}\\n\\nforall Circle C {\\n   shape C.icon = Circle {\\n      center: (?,?)\\n      r: random(30,80)\\n   }\\n}\\n\\nforall Ellipse E {\\n   shape E.icon = Ellipse {\\n      center: (0,0)\\n      rx: random(30,80)\\n      ry: random(30,80)\\n   }\\n}\\n\\nforall Group G {\\n\\n   vec2 p0 = (?,?)\\n   vec2 p1 = (?,?)\\n   vec2 p2 = (?,?)\\n\\n   shape s1 = Circle {\\n      r: random(30,70)\\n   }\\n   shape s2 = Rectangle {\\n      width: random(50,150)\\n      height: random(50,150)\\n   }\\n   shape s3 = Polygon {\\n      points: [p0,p1,p2]\\n   }\\n\\n   vec2 u = p1-p0\\n   vec2 v = p2-p1\\n   vec2 w = p0-p2\\n   ensure angleBetween(-u,v) &gt; MathPI()/6\\n   ensure angleBetween(-v,w) &gt; MathPI()/6\\n   ensure angleBetween(-w,u) &gt; MathPI()/6\\n\\n   shape G.icon = Group {\\n      shapes: [s1,s2,s3]\\n   }\\n\\n   shape bbox = Rectangle {\\n      fillColor: none()\\n      strokeColor: #ddd\\n      strokeDasharray: &quot;10 8&quot;\\n      strokeWidth: 2.0\\n      center: (0,0)\\n      width: random(300,500)\\n      height: random(300,500)\\n   }\\n   ensure contains( bbox, s1 )\\n   ensure contains( bbox, s2 )\\n   ensure contains( bbox, s3 )\\n   ensure contains( G.icon, bbox )\\n\\n}\\n\\n-- Rules for drawing closest silhouette points\\n\\nforall Point x; Shape S\\n{\\n   vec2 p = closestSilhouettePoint( S.icon, x.pos )\\n\\n   shape closestSegment = Line {\\n      start: x.pos\\n      end: p\\n      strokeColor: #000000ff\\n      strokeWidth: 2\\n      ensureOnCanvas: false\\n   }\\n\\n   scalar D = norm( (canvas.width, canvas.height) )\\n   shape continuedSegment = Line {\\n      start: p\\n      end: p + D*unit(p-x.pos)\\n      strokeColor: #00000033\\n      strokeWidth: 2\\n      ensureOnCanvas: false\\n      strokeDasharray: &quot;10 8&quot;\\n   }\\n\\n   shape closestDot = Circle {\\n      r: x.icon.r\\n      center: p\\n      fillColor: #ffffffff\\n      strokeColor: #000000ff\\n      strokeWidth: 2\\n      ensureOnCanvas: false\\n   }\\n}\\n\\nforall Point x; Polyline L\\n{\\n   vec2 p = closestSilhouettePoint( L.icon, x.pos )\\n\\n   shape closestSegment = Line {\\n      start: x.pos\\n      end: p\\n      strokeColor: #000000ff\\n      strokeWidth: 2\\n      ensureOnCanvas: false\\n   }\\n\\n   scalar D = norm( (canvas.width, canvas.height) )\\n   shape continuedSegment = Line {\\n      start: p\\n      end: p + D*unit(p-x.pos)\\n      strokeColor: #00000033\\n      strokeWidth: 2\\n      ensureOnCanvas: false\\n      strokeDasharray: &quot;10 8&quot;\\n   }\\n\\n   shape closestDot = Circle {\\n      r: x.icon.r\\n      center: p\\n      fillColor: #ffffffff\\n      strokeColor: #000000ff\\n      strokeWidth: 2\\n      ensureOnCanvas: false\\n   }\\n}\\n\\n-- Keep shapes from overlapping\\nforall Shape S1; Shape S2\\n{\\n   ensure disjoint( S1.icon, S2.icon )\\n}\\n\\t\\t</sty>\\n\\t<dsl>type Point\\n\\ntype Shape\\ntype Line &lt;: Shape\\ntype Polyline\\ntype Polygon &lt;: Shape\\ntype Rectangle &lt;: Shape\\ntype Circle &lt;: Shape\\ntype Ellipse &lt;: Shape\\n\\ntype Group &lt;: Shape\\n\\t\\t</dsl>\\n</penrose>\\n</svg>\\n\";\n//# sourceMappingURL=closest-silhouette-point-example.svg.js.map"],"names":["closestSilhouettePointExample_svg"],"mappings":"AAAA,MAAAA,EAAe}