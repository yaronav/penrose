{"version":3,"file":"Grid.stories-4b7f370b.js","sources":["../../src/Grid.tsx"],"sourcesContent":["import { PathResolver, PenroseState, isOptimized } from \"@penrose/core\";\n\nimport * as _ from \"lodash\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Gridbox, GridboxProps } from \"./Gridbox.js\";\n\ntype DiagramSource = {\n  style: string;\n  domain: string;\n  substance: string;\n  variation: string;\n};\n\nexport interface GridProps {\n  diagrams: DiagramSource[];\n  metadata: (i: number) => {\n    name: string;\n    data: string;\n  }[];\n  header: (i: number) => string;\n  onSelected?: (n: number) => void;\n  onComplete?: () => void;\n  onStateUpdate: (n: number, s: PenroseState) => void;\n  imageResolver?: PathResolver;\n  gridBoxProps?: Partial<GridboxProps>;\n  selected?: number[];\n}\n\nconst GridContainer = styled.main`\n  flex-grow: 1;\n  margin-left: \"4rem\";\n`;\n\nconst GridContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst Placeholder = styled.div``;\n\nconst PlaceholderText = styled.h3`\n  font-family: \"Roboto Mono\";\n  color: ${(props) => props.theme.primary};\n`;\n\ninterface GridState {\n  optimized: boolean[];\n}\n\nexport class Grid extends React.Component<GridProps, GridState> {\n  constructor(props: GridProps) {\n    super(props);\n    this.state = {\n      optimized: Array(props.diagrams.length),\n    };\n  }\n\n  innerContent() {\n    return this.props.diagrams.map(\n      ({ substance, domain, style, variation }, i) => (\n        <Gridbox\n          {...this.props.gridBoxProps}\n          key={`grid-${i}`}\n          name={`grid-${i}`}\n          header={this.props.header(i)}\n          metadata={this.props.metadata(i)}\n          domain={domain}\n          style={style}\n          gridIndex={i}\n          substance={substance}\n          variation={variation}\n          excludeWarnings={[]}\n          onSelected={this.props.onSelected}\n          onStateUpdate={(n, state) => {\n            // record opt status\n            this.setState((prev) => {\n              const optStatuses = [...prev.optimized];\n              optStatuses[n] = isOptimized(state);\n              // report opt completion when all are done\n              if (this.props.onComplete && _.every(optStatuses))\n                this.props.onComplete();\n              return { ...prev, optStatuses };\n            });\n            // callback\n            this.props.onStateUpdate(n, state);\n          }}\n          imageResolver={this.props.imageResolver}\n          selected={this.props.selected && this.props.selected.includes(i)}\n        />\n      ),\n    );\n  }\n\n  render() {\n    const content =\n      this.props.diagrams.length === 0 ? (\n        <Placeholder>\n          <PlaceholderText>\n            {\"(Generated diagrams will appear here)\"}\n          </PlaceholderText>\n        </Placeholder>\n      ) : (\n        this.innerContent()\n      );\n    return (\n      <GridContainer>\n        <GridContent>{content}</GridContent>\n      </GridContainer>\n    );\n  }\n}\n"],"names":["GridContainer","styled","GridContent","Placeholder","PlaceholderText","h3","_Grid","React","props","substance","domain","style","variation","gridBoxProps","i","onSelected","prev","optStatuses","_.every","n","state","imageResolver","content","_jsx","__name","Grid"],"mappings":"2hBA6BA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA,EAKAC,EAAAD,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAE,EAAAF,EAAA,MAEAG,EAAAH,EAAA;AAAA;AAAA,WAA+BI,GAAAA,EAAAA,MAAAA,OAAAA;AAAAA,EASxBC,EAAA,MAAAA,UAAAC,EAAA,SAAA,CAAyD,YAAAC,EAAA,CAE5D,MAAAA,CAAA,EACA,KAAA,MAAA,CAAa,UAAA,MAAAA,EAAA,SAAA,MAAA,CAC2B,CACxC,CACF,cAAA,CAGE,OAAA,KAAA,MAAA,SAAA,IAAA,CAAA,CACG,UAAAC,EAAEA,OAAAA,EAAWC,MAAAA,EAAQC,UAAAA,CAAOC,EAAAA,IAAAA,EAAAA,cAAAA,EAAAA,CACnB,GAAA,KAAA,MAAA,aACSC,IAAAA,QAAAA,CAAAA,GACA,KAAA,QAAAC,CAAA,GACC,OAAA,KAAA,MAAA,OAAAA,CAAA,EACW,SAAA,KAAA,MAAA,SAAAA,CAAA,EACI,OAAAJ,EAC/BA,MAAAA,EACAC,UAAAA,EACWG,UAAAA,EACXL,UAAAA,EACAG,gBAAAA,CAAAA,EACoB,WAAA,KAAA,MAAA,WACGG,cAAAA,CAAAA,EAAAA,IAAAA,CAGrB,KAAA,SAAAC,GAAA,CACE,MAAAC,EAAA,CAAA,GAAAD,EAAA,SAAA,EACAC,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAEA,KAAA,MAAA,YAAAC,EAAAA,MAAAD,CAAA,GACE,KAAA,MAAA,aACF,CAAO,GAAAD,EAAKA,YAAAA,CAAMC,CAAY,CAAA,EAGhC,KAAA,MAAA,cAAAE,EAAAC,CAAA,CAAiC,EACnC,cAAA,KAAA,MAAA,cAC0BC,SAAAA,KAAAA,MAAAA,UAAAA,KAAAA,MAAAA,SAAAA,SAAAA,CAAAA,CACqC,CAAA,CAAA,CAGrE,CACF,QAAA,CAGE,MAAAC,EAAA,KAAA,MAAA,SAAA,SAAA,EAAAC,EAAApB,EAAA,CAEgB,SAAAoB,EAAAnB,EAAA,CACM,SAAA,uCACb,CAAA,CACc,CAAA,EAAA,KAAA,eAKvB,OAAAmB,EAAAvB,EAAA,CACgB,SAAAuB,EAAArB,EAAA,CACA,SAAAoB,CAAEA,CAAAA,CAAqB,CAAA,CACtB,CAGrB,EA7DOE,EAAAlB,EAAA,QAAA,IAAAmB,EAAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}