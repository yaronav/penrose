{"version":3,"mappings":"wHAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECAFC,EAAOC,EAAA,CAACC,EAAKC,IAAS,CAC/B,GAAIA,EAAK,WAAW,GAAG,EACnB,OAAOA,EACX,MAAMC,EAAQF,EAAI,MAAM,GAAG,EAC3B,UAAWG,KAAQF,EAAK,MAAM,GAAG,EACzBE,IAAS,KACTD,EAAM,IAAG,EACJC,IAAS,KACdD,EAAM,KAAKC,CAAI,EAEvB,OAAOD,EAAM,KAAK,GAAG,CACzB,EAXoB,QCCPE,EAAeL,EAACC,GAAQ,MAAOC,GAAS,CACjD,OAAQH,EAAKE,EAAKC,CAAI,EAAC,CACnB,IAAK,yDACD,OAAQ,YAAM,OAAO,2BAA6D,uBAAG,QACzF,IAAK,wDACD,OAAQ,YAAM,OAAO,0BAA4D,uBAAG,QACxF,IAAK,qDACD,OAAQ,YAAM,OAAO,uBAAyD,uBAAG,QACrF,IAAK,uDACD,OAAQ,YAAM,OAAO,yBAA2D,uBAAG,QACvF,IAAK,6CACD,OAAQ,MAAMI,EAAA,WAAO,+BAAiD,uBAAG,QAC7E,IAAK,qCACD,OAAQ,MAAMA,EAAA,WAAO,wCAAyC,uBAAG,QACrE,IAAK,6DACD,OAAQ,YAAM,OAAO,0CAAiE,uBAAG,QAC7F,IAAK,kFACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,oDAAsF,EAAC,qBAAE,QAClH,IAAK,kDACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,6CAAsD,uBAAG,QAClF,IAAK,6DACD,OAAQ,YAAM,OAAO,0CAAiE,uBAAG,QAC7F,IAAK,yBACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,2BAA6B,uBAAG,QACzD,IAAK,uCACD,OAAQ,YAAM,OAAO,oCAA2C,uBAAG,QACvE,IAAK,iCACD,OAAQ,MAAMA,EAAA,WAAO,8BAAqC,uBAAG,QACjE,IAAK,sCACD,OAAQ,YAAM,OAAO,mCAA0C,uBAAG,QACtE,IAAK,6BACD,OAAQ,MAAMA,EAAA,WAAO,2BAAiC,uBAAG,QAC7D,IAAK,kCACD,OAAQ,YAAM,OAAO,gCAAsC,uBAAG,QAClE,IAAK,wBACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,8BAA4B,uBAAG,QACxD,IAAK,4BACD,OAAQ,MAAMA,EAAA,WAAO,kCAAgC,uBAAG,QAC5D,IAAK,0CACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,yCAA8C,uBAAG,QAC1E,IAAK,kCACD,OAAQ,MAAMA,EAAA,WAAO,2BAAsC,uBAAG,QAClE,IAAK,sDACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,+CAA0D,uBAAG,QACtF,IAAK,4BACD,OAAQ,MAAMA,EAAA,WAAO,6BAAgC,uBAAG,QAC5D,IAAK,uCACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,wCAA2C,uBAAG,QACvE,IAAK,iDACD,OAAQ,YAAM,OAAO,4CAAqD,uBAAG,QACjF,IAAK,gCACD,OAAQ,YAAM,OAAO,2BAAoC,uBAAG,QAChE,IAAK,sCACD,OAAQ,YAAM,OAAO,gCAA0C,uBAAG,QACtE,IAAK,oCACD,OAAQ,MAAMA,EAAA,WAAO,8BAAwC,uBAAG,QACpE,IAAK,sCACD,OAAQ,YAAM,OAAO,gCAA0C,uBAAG,QACtE,IAAK,iDACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,2CAAqD,uBAAG,QACjF,IAAK,mCACD,OAAQ,MAAKA,EAAA,IAAC,OAAO,gCAAuC,uBAAG,QACnE,IAAK,mEACD,OAAQ,MAAMA,EAAA,WAAO,yDAAuE,EAAC,qBAAE,QACnG,IAAK,kEACD,OAAQ,MAAMA,EAAA,WAAO,wDAAsE,EAAC,qBAAE,QAClG,IAAK,qEACD,OAAQ,MAAMA,EAAA,WAAO,2DAAyE,EAAC,qBAAE,QACrG,IAAK,mEACD,OAAQ,MAAMA,EAAA,WAAO,yDAAuE,EAAC,qBAAE,QACnG,QACI,MACP,CACL,EAzE4B,gBCAfC,EAAWF,EAAa,kBAAkB,EACvDG,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECFfC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["domain","join","__name","dir","path","parts","part","makeResolver","__vitePreload","resolver","style0","substance"],"sources":["../../../examples/dist/exterior-algebra/exterior-algebra.domain.js","../../../examples/dist/index.js","../../../examples/dist/resolver.js","../../../examples/dist/exterior-algebra/exterior-algebra.style.js","../../../examples/dist/exterior-algebra/vector-wedge.substance.js"],"sourcesContent":["export default \"type Scalar\\n\\n-- define vectors and bivectors as subtypes of a base k-vector type\\ntype kVector\\ntype Vector <: kVector\\ntype Bivector <: kVector\\n\\n-- some basic operations on k-vectors\\nfunction Scale( Scalar, Vector ) -> Vector\\nfunction Add( Vector, Vector ) -> Vector\\nfunction Wedge( Vector, Vector ) -> Bivector\\n\\n-- (more can be added here ) --\\n\";\n//# sourceMappingURL=exterior-algebra.domain.js.map","export const join = (dir, path) => {\n    if (path.startsWith(\"/\"))\n        return path;\n    const parts = dir.split(\"/\");\n    for (const part of path.split(\"/\")) {\n        if (part === \"..\")\n            parts.pop();\n        else if (part !== \".\")\n            parts.push(part);\n    }\n    return parts.join(\"/\");\n};\n//# sourceMappingURL=index.js.map","import { join } from \"./index.js\";\nexport const makeResolver = (dir) => async (path) => {\n    switch (join(dir, path)) {\n        case \"alloy-models/river-crossing/character-svgs/chicken.svg\":\n            return (await import(\"./alloy-models/river-crossing/character-svgs/chicken.svg.js\")).default;\n        case \"alloy-models/river-crossing/character-svgs/farmer.svg\":\n            return (await import(\"./alloy-models/river-crossing/character-svgs/farmer.svg.js\")).default;\n        case \"alloy-models/river-crossing/character-svgs/fox.svg\":\n            return (await import(\"./alloy-models/river-crossing/character-svgs/fox.svg.js\")).default;\n        case \"alloy-models/river-crossing/character-svgs/grain.svg\":\n            return (await import(\"./alloy-models/river-crossing/character-svgs/grain.svg.js\")).default;\n        case \"curve-examples/catmull-rom/catmull-rom.svg\":\n            return (await import(\"./curve-examples/catmull-rom/catmull-rom.svg.js\")).default;\n        case \"dinoshade/dinoshade-vectorized.svg\":\n            return (await import(\"./dinoshade/dinoshade-vectorized.svg.js\")).default;\n        case \"geometric-queries/closest-point/closest-point-examples.svg\":\n            return (await import(\"./geometric-queries/closest-point/closest-point-examples.svg.js\")).default;\n        case \"geometric-queries/closest-silhouette-point/closest-silhouette-point-example.svg\":\n            return (await import(\"./geometric-queries/closest-silhouette-point/closest-silhouette-point-example.svg.js\")).default;\n        case \"geometric-queries/geometric-queries-example.svg\":\n            return (await import(\"./geometric-queries/geometric-queries-example.svg.js\")).default;\n        case \"geometric-queries/ray-intersect/ray-intersect-examples.svg\":\n            return (await import(\"./geometric-queries/ray-intersect/ray-intersect-examples.svg.js\")).default;\n        case \"hypergraph/example.svg\":\n            return (await import(\"./hypergraph/example.svg.js\")).default;\n        case \"impossible-ngon/nsides-chirality.svg\":\n            return (await import(\"./impossible-ngon/nsides-chirality.svg.js\")).default;\n        case \"impossible-ngon/parameters.svg\":\n            return (await import(\"./impossible-ngon/parameters.svg.js\")).default;\n        case \"impossible-ngon/radial-gradient.svg\":\n            return (await import(\"./impossible-ngon/radial-gradient.svg.js\")).default;\n        case \"lagrange-bases/example.svg\":\n            return (await import(\"./lagrange-bases/example.svg.js\")).default;\n        case \"matrix-library/test-example.svg\":\n            return (await import(\"./matrix-library/test-example.svg.js\")).default;\n        case \"mobius/background.svg\":\n            return (await import(\"./mobius/background.svg.js\")).default;\n        case \"mobius/sphere-shading.svg\":\n            return (await import(\"./mobius/sphere-shading.svg.js\")).default;\n        case \"penrose-sound/penrose-sound-example.svg\":\n            return (await import(\"./penrose-sound/penrose-sound-example.svg.js\")).default;\n        case \"persistent-homology/example.svg\":\n            return (await import(\"./persistent-homology/example.svg.js\")).default;\n        case \"persistent-homology/persistent-homology-shading.svg\":\n            return (await import(\"./persistent-homology/persistent-homology-shading.svg.js\")).default;\n        case \"ray-tracing/lightbulb.svg\":\n            return (await import(\"./ray-tracing/lightbulb.svg.js\")).default;\n        case \"ray-tracing/ray-tracing-examples.svg\":\n            return (await import(\"./ray-tracing/ray-tracing-examples.svg.js\")).default;\n        case \"set-theory-domain/set-theory-domain-shadow.svg\":\n            return (await import(\"./set-theory-domain/set-theory-domain-shadow.svg.js\")).default;\n        case \"set-theory-domain/shading.svg\":\n            return (await import(\"./set-theory-domain/shading.svg.js\")).default;\n        case \"stochastic-process/ball-shading.svg\":\n            return (await import(\"./stochastic-process/ball-shading.svg.js\")).default;\n        case \"structural-formula/background.svg\":\n            return (await import(\"./structural-formula/background.svg.js\")).default;\n        case \"structural-formula/node-shading.svg\":\n            return (await import(\"./structural-formula/node-shading.svg.js\")).default;\n        case \"structural-formula/structural-formula-atom.svg\":\n            return (await import(\"./structural-formula/structural-formula-atom.svg.js\")).default;\n        case \"walk-on-spheres/ball-shading.svg\":\n            return (await import(\"./walk-on-spheres/ball-shading.svg.js\")).default;\n        case \"walk-on-spheres/images/wos-laplace-estimator-walk-on-spheres.svg\":\n            return (await import(\"./walk-on-spheres/images/wos-laplace-estimator-walk-on-spheres.svg.js\")).default;\n        case \"walk-on-spheres/images/wos-nested-estimator-walk-on-spheres.svg\":\n            return (await import(\"./walk-on-spheres/images/wos-nested-estimator-walk-on-spheres.svg.js\")).default;\n        case \"walk-on-spheres/images/wos-offcenter-estimator-walk-on-spheres.svg\":\n            return (await import(\"./walk-on-spheres/images/wos-offcenter-estimator-walk-on-spheres.svg.js\")).default;\n        case \"walk-on-spheres/images/wos-poisson-estimator-walk-on-spheres.svg\":\n            return (await import(\"./walk-on-spheres/images/wos-poisson-estimator-walk-on-spheres.svg.js\")).default;\n        default:\n            return undefined;\n    }\n};\n//# sourceMappingURL=resolver.js.map","import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"exterior-algebra\");\nexport default \"-- define the size of the drawing\\ncanvas {\\n   width = 240\\n   height = 180\\n}\\n\\n-- define some colors re-used throughout\\nColors {\\n   color black = rgba(0,0,0,1)\\n   color white = rgba(1,1,1,1)\\n   color clearGray = rgba(0,0,0,.2)\\n}\\n\\nGlobal {\\n\\n   -- draw a box around the canvas (this box will \\n   -- also be used to constrain shapes to the canvas)\\n   shape box = Rectangle {\\n      center: (0,0)\\n      width: canvas.width\\n      height: canvas.height\\n      fillColor: none()\\n      strokeColor: Colors.clearGray\\n      strokeWidth: 1\\n   }\\n\\n   -- some additional parameters to get consistent styling throughout\\n   scalar lineThickness = 1.5\\n   scalar fontSize = \\\"9px\\\"\\n   string fontFamily = \\\"Linux Libertine\\\"\\n}\\n\\n-- for each Vector declared in the .substance program, this match will\\n-- get executed once to draw a little widget for that vector, and\\n-- set up any associated constraints\\nforall Vector v {\\n\\n   -- declare a point whose location will be\\n   -- determined via optimization\\n   v.p = (?,?)\\n\\n   -- draw an arrow to p\\n   v.icon = Line {\\n      start: (0,0)\\n      end: v.p\\n      strokeColor: Colors.black\\n      strokeWidth: Global.lineThickness\\n      strokeLinecap: \\\"round\\\"\\n      endArrowhead: \\\"straight\\\"\\n      endArrowheadSize: .5\\n   }\\n   -- keep the arrow on the canvas\\n   ensure contains( Global.box, v.icon)\\n}\\n\\n-- draw a label for the vector if it has one\\nforall Vector v\\nwhere v has label {\\n   v.labelText = Equation {\\n      string: v.label\\n      center: v.p + 4.*unit(v.p)\\n      fillColor: Colors.black\\n      fontSize: Global.fontSize\\n      fontFamily: Global.fontFamily\\n   }\\n   -- keep the label on the canvas\\n   ensure contains( Global.box, v.labelText )\\n}\\n\\n-- draw a bivector that has been defined as the wedge of two\\n-- vectors as a little parallelogram\\nforall Bivector w; Vector u; Vector v\\nwhere w := Wedge(u,v) {\\n\\n   -- pick a random brightly-saturated color for this bivector\\n   -- (these colors will be re-used in subsequent rules, which\\n   -- why we define them up-front and associate them with w)\\n   scalar w.hue = ?\\n   color w.solidColor = hsva( w.hue, 100, 80, 1 )\\n   color w.clearColor = hsva( w.hue, 100, 80, .2 )\\n\\n   -- draw a parallelogram with sides u,v\\n   shape w.icon = Path {\\n      d: pathFromPoints(\\\"closed\\\", [ (0,0), u.p, u.p+v.p, v.p ])\\n      fillColor: w.clearColor\\n      strokeColor: none()\\n   }\\n   -- keep the parallelogram on the canvas\\n   ensure contains( Global.box, w.icon )\\n\\n   -- try to make sure the parallelogram is a reasonable size\\n   scalar area = abs( cross2D( u.p, v.p ))\\n   scalar canvasArea = canvas.width * canvas.height\\n   encourage greaterThan( area, canvasArea/10. )\\n\\n   -- compute the minimum width of the parallelogram\\n   -- by projecting each vector onto the unit normal\\n   -- of the other\\n   vec2 nu = unit( rot90(u.p) )\\n   vec2 nv = unit( rot90(v.p) )\\n   scalar wu = abs( dot( nu, v.p ))\\n   scalar wv = abs( dot( nv, u.p ))\\n   scalar minWidth = min( wu, wv )\\n\\n   -- draw an orientation marker\\n   scalar w.c = (u.p+v.p)/2. -- center\\n   scalar R = .75 * minWidth/2. -- radius\\n   vec2 x0 = w.c + R*unit(u.p-v.p) -- arc start\\n   vec2 x1 = w.c + R*unit(v.p-u.p) -- arc end\\n   scalar cw = .5*sign( cross2D(u.p,v.p) ) + .5 -- clockwise (1) or not (0)\\n   shape w.marker = Path {\\n      d: arc( \\\"open\\\", x0, x1, (R,R), 0., 0, cw )\\n      fillColor: none()\\n      strokeColor: w.solidColor\\n      strokeWidth: .75*Global.lineThickness\\n      startArrowhead: \\\"straight\\\"\\n      startArrowheadSize: .5\\n   }\\n}\\n\\n-- draw a label for the bivector if it has one\\nforall Bivector w\\nwhere w has label {\\n   w.labelText = Equation {\\n      string: w.label\\n      center: w.c -- marker center\\n      fillColor: w.solidColor\\n      fontSize: Global.fontSize\\n      fontFamily: Global.fontFamily\\n   }\\n}\\n\\n\";\n//# sourceMappingURL=exterior-algebra.style.js.map","export default \"Vector a, b, c\\nBivector u := Wedge(a,b)\\nBivector v := Wedge(b,c)\\n\\nAutoLabel All\\nLabel u $a \\\\wedge b$\\nLabel v $b \\\\wedge c$\\n\";\n//# sourceMappingURL=vector-wedge.substance.js.map"],"file":"assets/vector-wedge.substance-00c05a9a.js"}